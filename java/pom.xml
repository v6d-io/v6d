<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.v6d</groupId>
  <artifactId>vineyard</artifactId>
  <version>0.1-SNAPSHOT</version>

  <name>vineyard</name>
  <url>https://v6d.io</url>

  <packaging>pom</packaging>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <dependency.arrow.version>11.0.0</dependency.arrow.version>
    <dependency.guava.version>32.0.0-jre</dependency.guava.version>
    <dependency.jackson.version>2.14.0-rc1</dependency.jackson.version>
    <dependency.jnr-posix.version>3.1.17</dependency.jnr-posix.version>
    <dependency.jnr-unixsocket.version>0.38.20</dependency.jnr-unixsocket.version>
    <dependency.junit.version>4.13.2</dependency.junit.version>
    <dependency.lombok.version>1.18.20</dependency.lombok.version>
    <dependency.logback.version>1.3.15</dependency.logback.version>
    <dependency.native-lib-loader.version>2.3.5</dependency.native-lib-loader.version>
    <dependency.slf4j.version>1.7.32</dependency.slf4j.version>
  </properties>

  <modules>
    <module>core</module>
    <module>modules</module>
    <module>hive</module>
    <module>spark</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.github.jnr</groupId>
        <artifactId>jnr-posix</artifactId>
        <version>${dependency.jnr-posix.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.jnr</groupId>
        <artifactId>jnr-unixsocket</artifactId>
        <version>${dependency.jnr-unixsocket.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${dependency.guava.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.arrow</groupId>
        <artifactId>arrow-memory</artifactId>
        <version>${dependency.arrow.version}</version>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.apache.arrow</groupId>
        <artifactId>arrow-memory-core</artifactId>
        <version>${dependency.arrow.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.arrow</groupId>
        <artifactId>arrow-memory-netty</artifactId>
        <version>${dependency.arrow.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.arrow</groupId>
        <artifactId>arrow-memory-unsafe</artifactId>
        <version>${dependency.arrow.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.arrow</groupId>
        <artifactId>arrow-vector</artifactId>
        <version>${dependency.arrow.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${dependency.jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${dependency.jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${dependency.jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${dependency.lombok.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${dependency.logback.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${dependency.logback.version}</version>
      </dependency>

      <dependency>
        <groupId>org.scijava</groupId>
        <artifactId>native-lib-loader</artifactId>
        <version>${dependency.native-lib-loader.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${dependency.slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${dependency.junit.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>unix</family>
          <name>Linux</name>
        </os>
      </activation>
      <properties>
        <native.library.ext>so</native.library.ext>
        <native.library.path>linux_64</native.library.path>
      </properties>
    </profile>
    <profile>
      <id>macosx</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <native.library.ext>dylib</native.library.ext>
        <native.library.path>osx_64</native.library.path>
      </properties>
    </profile>
  </profiles>

  <build>
    <pluginManagement> <!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
          <configuration>
            <compilerArgs>
              <arg>-h</arg>
              <arg>${project.build.directory}/jni/javah-include</arg>
            </compilerArgs>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.5.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.9.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.4.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>com.googlecode.cmake-maven-project</groupId>
          <artifactId>cmake-maven-plugin</artifactId>
          <version>3.23.2-b1</version>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.27.2</version>
          <configuration>
            <formats>
              <!-- you can define as many formats as you want, each is independent -->
              <format>
                <!-- define the files to apply to -->
                <includes>
                  <include>*.md</include>
                  <include>.gitignore</include>
                </includes>
                <!-- define the steps to apply to those files -->
                <trimTrailingWhitespace/>
                <endWithNewline/>
                <indent>
                  <spaces>true</spaces>
                  <spacesPerTab>4</spacesPerTab>
                </indent>
              </format>
            </formats>
            <!-- define a language-specific format -->
            <java>
              <excludes>
                <exclude>**/com/google/**/*.java</exclude>
                <exclude>**/org/apache/hadoop/hive/**/*.java</exclude>
              </excludes>

              <importOrder>  <!-- or a custom ordering -->
                <wildcardsLast>false</wildcardsLast>
                <order>java,javax,org.apache,org,com,lombok,io.v6d,</order>
                <!-- you can use an empty string for all the imports you didn't specify explicitly, and '\\#` prefix for static imports. -->
              </importOrder>

              <!-- apply a specific flavor of google-java-format -->
              <googleJavaFormat>
                <version>1.11.0</version>
                <style>AOSP</style>
              </googleJavaFormat>

              <!-- make sure every file has the following copyright header.
                optionally, Spotless can set copyright years by digging
                through git history (see "license" section below) -->
              <licenseHeader>
                <!-- <content>/* (C)$YEAR */</content> or <file>${basedir}/license-header</file> -->
                <file>${maven.multiModuleProjectDirectory}/apache-2.0.txt</file>
              </licenseHeader>
            </java>
            <scala>
              <!-- These are the defaults, you can override if you want -->
              <includes>
                <include>src/main/scala/**/*.scala</include>
                <include>src/test/scala/**/*.scala</include>
                <include>src/main/scala/**/*.sc</include>
                <include>src/test/scala/**/*.sc</include>
              </includes>

              <scalafmt>
                <version>3.5.9</version>
              </scalafmt>

              <licenseHeader>
                <!-- <content>/* (C)$YEAR */</content>  or <file>${project.basedir}/license-header</file> -->
                <file>${maven.multiModuleProjectDirectory}/apache-2.0.txt</file>
                <delimiter>package </delimiter>
              </licenseHeader>
            </scala>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
